version: '3'
services:
  postgres:
    image: postgres:11-alpine
    environment:
      - "POSTGRES_DB=helse-spenn-oppdrag"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
    ports:
      - "5432:5432"
    volumes:
      - ./scripts/spenn/postgresql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
  vault:
    networks:
      default:
        aliases:
          - vault
    privileged: true
    environment:
      - "VAULT_DEV_ROOT_TOKEN_ID=token123"
      - "VAULT_TOKEN=token123"
      - "VAULT_ADDR=http://vault:8200"
    image: vault:1.1.0
    ports:
      - "8200:8200"
    depends_on:
      - postgres
    volumes:
      - ./scripts/spenn:/spenn
    command: ["/spenn/wait_for.sh", "postgres:5432", "docker-entrypoint.sh server -dev"]
  vault_init:
    environment:
      - "VAULT_DEV_ROOT_TOKEN_ID=token123"
      - "VAULT_TOKEN=token123"
      - "VAULT_ADDR=http://vault:8200"
    image: vault:1.1.0
    depends_on:
      - vault
    volumes:
      - ./scripts/spenn:/spenn
    command: ["/spenn/wait_for.sh","vault:8200", "./spenn/vault/vault_postgresql.sh"]
  mq:
    image: ibmcom/mq
    ports:
      - "1414:1414"
    environment:
      - LICENSE=accept
      - MQ_QMGR_NAME=QM1
  kafka:
    image: confluentinc/cp-kafka:5.1.0
    networks:
      default:
        aliases:
          - kafka
    environment:
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME= LISTENER_DOCKER_INTERNAL
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.0
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - "2181:2181"
  spenn:
    environment:
      - "SPRING_CLOUD_VAULT_AUTHENTICATION=TOKEN"
      - "SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/helse-spenn-oppdrag"
      - "SPRING_CLOUD_VAULT_ENABLED=true"
      - "SPRING_CLOUD_VAULT_URI=http://vault:8200"
      - "KAFKA_BOOTSTRAP_SERVERS=kafka:9020"
      - "SECURITY_TOKEN_SERVICE_REST_URL=http://localhost:8080"
      - "SECURITYTOKENSERVICE_URL=http://localhost:8888"
      - "SIMULERING_SERVICE_URL=http//localhost:9110"
      - "STS_REST_USERNAME=foo"
      - "STS_REST_PASSWORD=bar"
      - "KAFKA_USERNAME=foo"
      - "KAFKA_PASSWORD=bar"
      - "STS_SOAP_USERNAME=foo"
      - "STS_SOAP_PASSWORD=bar"
      - "NAV_TRUSTSTORE_PATH=somewhere"
      - "NAV_TRUSTSTORE_PASSWORD=somekey"
      - "PLAIN_TEXT_KAFKA=true"
      - "SPRING_CLOUD_VAULT_TOKEN=token123"
      - "SPRING_PROFILES_ACTIVE=preprod"
    build: .
    depends_on:
      - kafka
      - postgres
      - mq
    ports:
      - "8080:8080"