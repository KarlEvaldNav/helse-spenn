/*
 * This file is generated by jOOQ.
 */
package no.nav.helse.spenn.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import no.nav.helse.spenn.jooq.tables.Transaksjon;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransaksjonRecord extends UpdatableRecordImpl<TransaksjonRecord> implements Record8<Long, Long, Timestamp, Boolean, String, String, String, String> {

    private static final long serialVersionUID = 992075747;

    /**
     * Setter for <code>public.transaksjon.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.transaksjon.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.transaksjon.oppdrag_id</code>.
     */
    public void setOppdragId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.transaksjon.oppdrag_id</code>.
     */
    public Long getOppdragId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.transaksjon.nokkel</code>.
     */
    public void setNokkel(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.transaksjon.nokkel</code>.
     */
    public Timestamp getNokkel() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>public.transaksjon.avstemt</code>.
     */
    public void setAvstemt(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.transaksjon.avstemt</code>.
     */
    public Boolean getAvstemt() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>public.transaksjon.status</code>.
     */
    public void setStatus(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.transaksjon.status</code>.
     */
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.transaksjon.utbetalingsoppdrag</code>.
     */
    public void setUtbetalingsoppdrag(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.transaksjon.utbetalingsoppdrag</code>.
     */
    public String getUtbetalingsoppdrag() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.transaksjon.oppdragresponse</code>.
     */
    public void setOppdragresponse(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.transaksjon.oppdragresponse</code>.
     */
    public String getOppdragresponse() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.transaksjon.simuleringresult</code>.
     */
    public void setSimuleringresult(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.transaksjon.simuleringresult</code>.
     */
    public String getSimuleringresult() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, Timestamp, Boolean, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, Timestamp, Boolean, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Transaksjon.TRANSAKSJON.ID;
    }

    @Override
    public Field<Long> field2() {
        return Transaksjon.TRANSAKSJON.OPPDRAG_ID;
    }

    @Override
    public Field<Timestamp> field3() {
        return Transaksjon.TRANSAKSJON.NOKKEL;
    }

    @Override
    public Field<Boolean> field4() {
        return Transaksjon.TRANSAKSJON.AVSTEMT;
    }

    @Override
    public Field<String> field5() {
        return Transaksjon.TRANSAKSJON.STATUS;
    }

    @Override
    public Field<String> field6() {
        return Transaksjon.TRANSAKSJON.UTBETALINGSOPPDRAG;
    }

    @Override
    public Field<String> field7() {
        return Transaksjon.TRANSAKSJON.OPPDRAGRESPONSE;
    }

    @Override
    public Field<String> field8() {
        return Transaksjon.TRANSAKSJON.SIMULERINGRESULT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getOppdragId();
    }

    @Override
    public Timestamp component3() {
        return getNokkel();
    }

    @Override
    public Boolean component4() {
        return getAvstemt();
    }

    @Override
    public String component5() {
        return getStatus();
    }

    @Override
    public String component6() {
        return getUtbetalingsoppdrag();
    }

    @Override
    public String component7() {
        return getOppdragresponse();
    }

    @Override
    public String component8() {
        return getSimuleringresult();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getOppdragId();
    }

    @Override
    public Timestamp value3() {
        return getNokkel();
    }

    @Override
    public Boolean value4() {
        return getAvstemt();
    }

    @Override
    public String value5() {
        return getStatus();
    }

    @Override
    public String value6() {
        return getUtbetalingsoppdrag();
    }

    @Override
    public String value7() {
        return getOppdragresponse();
    }

    @Override
    public String value8() {
        return getSimuleringresult();
    }

    @Override
    public TransaksjonRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TransaksjonRecord value2(Long value) {
        setOppdragId(value);
        return this;
    }

    @Override
    public TransaksjonRecord value3(Timestamp value) {
        setNokkel(value);
        return this;
    }

    @Override
    public TransaksjonRecord value4(Boolean value) {
        setAvstemt(value);
        return this;
    }

    @Override
    public TransaksjonRecord value5(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public TransaksjonRecord value6(String value) {
        setUtbetalingsoppdrag(value);
        return this;
    }

    @Override
    public TransaksjonRecord value7(String value) {
        setOppdragresponse(value);
        return this;
    }

    @Override
    public TransaksjonRecord value8(String value) {
        setSimuleringresult(value);
        return this;
    }

    @Override
    public TransaksjonRecord values(Long value1, Long value2, Timestamp value3, Boolean value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransaksjonRecord
     */
    public TransaksjonRecord() {
        super(Transaksjon.TRANSAKSJON);
    }

    /**
     * Create a detached, initialised TransaksjonRecord
     */
    public TransaksjonRecord(Long id, Long oppdragId, Timestamp nokkel, Boolean avstemt, String status, String utbetalingsoppdrag, String oppdragresponse, String simuleringresult) {
        super(Transaksjon.TRANSAKSJON);

        set(0, id);
        set(1, oppdragId);
        set(2, nokkel);
        set(3, avstemt);
        set(4, status);
        set(5, utbetalingsoppdrag);
        set(6, oppdragresponse);
        set(7, simuleringresult);
    }
}
